# -----------------------------------------------------
# PART 0
# This script downloads data for both following parts
# 0) Good practices, clean variables and libraries
# 1) d
# 2) Save the data in a structure
# 3) Export the data to a .csv file
# -----------------------------------------------------
# -----------------------------------------------------
# 0) Good practices, clean variables and libraries
# -----------------------------------------------------
# Clean environment and libraries
rm(list = ls())
require(pacman)
p_load(rvest, dplyr, tidyr, readr, httr, jsonlite)
# -----------------------------------------------------
# PART A
# -----------------------------------------------------
# Load data for part A and b (relative path)
parte_a <- readRDS("Parte_A.rds")
# Verify no null data
colSums(is.na(parte_a))
# Define categoric variable "device_type"
parte_a <- parte_a %>%
mutate(device_type = as.factor(device_type)) %>%
mutate(is_returning_user = as.factor(is_returning_user)) %>%
mutate(sign_up = as.factor(sign_up))
## Faltar√≠a para OS_type si se agrega al final
# -----------------------------------------------------
# PART B
# -----------------------------------------------------
parte_b <- readRDS("Parte_B.rds")
# Verify no null data
colSums(is.na(parte_b))
# Libraries
require(pacman)
p_load(dplyr, tidyr, tidyverse, readr, ggplot2, corrplot)
# Change data name
db <- parte_a
# See and keep variables
vars <- colnames(db)
# Get categoric and non-categoric variables
categoric_vars <- sapply(db, is.factor)
non_categoric_vars <- !categoric_vars
# -----------------------------------------------------
# 1) Description of users general behaviour
# -----------------------------------------------------
# Summary statistics
summary(db)
lapply(db[, non_categoric_vars], summary)
# Histograms
lapply(vars, plot(density()))
lapply(db[, non_categoric_vars], function(x) plot(density(x)))
lapply(db[, non_categoric_vars], function(x) plot(density(x), main = paste("Density of", deparse(substitute(x)))))
lapply(names(db)[non_categoric_vars], function(var_name) {
plot(density(db[[var_name]]), main = paste("Density of", var_name))
})
lapply(names(db)[non_categoric_vars], function(var_name) {
plot(density(db[[var_name]]), main = paste("Density of", var_name))
})
# Histograms with ggplot2 for all numeric variables
histograma_gg <- function(var_name) {
ggplot(db, aes_string(x = var_name)) +
geom_histogram(aes(y = after_stat(count) / sum(after_stat(count))),
color = "#FFFFFF", fill = "#3a5e8cFF", binwidth = 10,
size = 0.2, alpha = 0.8, show.legend = FALSE, na.rm = TRUE, closed = 'left') +
labs(x = var_name, y = "Percent", title = paste("Histogram of", var_name)) +
theme_bw()
}
# To display all histograms, you can use lapply and print each plot
plots <- lapply(names(db)[non_categoric_vars], histograma_gg)
for (p in plots) print(p)
boxplot(db[, non_categoric_vars], main = "Boxplots of Non-Categorical Variables")
box_f <-  function(var_name) {
boxplot(db[[var_name]], main = paste("Boxplot of", var_name))
}
lapply(names(db)[non_categoric_vars], box_f)
plot(density(ln(db$Revenue)), main = "Density of log-Revenue")
plot(density(log(db$Revenue)), main = "Density of log-Revenue")
histograma_f <-  function(var_name) {
plot(density(db[[var_name]]), main = paste("Density of", var_name))
}
lapply(names(db)[non_categoric_vars], histograma_f)
lapply(names(db)[categoric_vars], box_f)
colSums(parte_a$is_returning_user)
colSums(is.na(parte_a$is_returning_user))
sum(parte_a$is_returning_user)
View(parte_a)
sum(db$is_returning_user == 1, na.rm = TRUE)
sum(db$sign_up == 1, na.rm = TRUE)
box_f_cat_rev <-  function(var_name) {
boxplot(log(Revenue) ~ db[[var_name]], main = paste("Boxplot of log(Revenue) by", var_name))
}
lapply(names(db)[categoric_vars], box_f_cat_rev)
box_f_cat_rev <-  function(var_name) {
boxplot(log(db$Revenue) ~ db[[var_name]], main = paste("Boxplot of log(Revenue) by", var_name))
}
lapply(names(db)[categoric_vars], box_f_cat_rev)
